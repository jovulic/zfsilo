syntax = "proto3";

package zfsilo.v1;

import "buf/validate/validate.proto";
import "gnostic/openapi/v3/annotations.proto";

option (gnostic.openapi.v3.document) = {
  info: {
    title: "ZFSilo"
    version: "0.1.0"
    description: "A ZFS-based network storage layer over iSCSI."
    contact: {
      name: "Josip Vulic"
      url: "https://github.com/jovulic/zfsilo"
      email: "jovulic@gmail.com"
    }
    license: {
      name: "MIT License"
      url: "https://github.com/jovulic/zfsilo/blob/main/LICENSE"
    }
  }
  components: {
    security_schemes: {
      additional_properties: [
        {
          name: "BasicAuth"
          value: {
            security_scheme: {
              type: "http"
              scheme: "basic"
            }
          }
        }
      ]
    }
  }
};

service GreeterService {
  rpc SayHello(SayHelloRequest) returns (SayHelloResponse) {
    option idempotency_level = NO_SIDE_EFFECTS;
    option (gnostic.openapi.v3.operation).description = "Say hello!";
  }
}

message SayHelloRequest {
  string name = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string.max_len = 64
  ];
}

message SayHelloResponse {
  string message = 1;
}
